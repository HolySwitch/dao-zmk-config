/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
     &kp GRAVE   &kp Q   &kp W     &kp E         &kp R      &kp T   &kp LEFT_BRACKET          &kp P    &kp O      &kp I          &kp U      &kp Y
     &kp LCTRL   &kp A   &kp S     &kp D         &kp F      &kp G           &kp APOS  &kp SEMICOLON    &kp L      &kp K          &kp J      &kp H
&kp LEFT_SHIFT   &kp Z   &kp X     &kp C         &kp V      &kp B      &kp BACKSLASH      &kp SLASH  &kp DOT  &kp COMMA          &kp M      &kp N
       &kp TAB                  &kp LWIN  &kp LEFT_ALT  &kp ENTER  &kp RIGHT_BRACKET                           &kp PLUS  &kt BACKSPACE  &kp SPACE
     &lt 1 ESC  &kp N1  &kp N2    &kp N3        &kp N4     &kp N5          &kp MINUS         &kp N0   &kp N9     &kp N8         &kp N7     &kp N6
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
      &kp EXCL  &kp AT      &kp HASH   &kp DLLR  &kp PRCNT  &mt RCTRL MINUS  &mt LALT EQUAL  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR
        &kp N2  &kp N3        &kp N4     &kp N5     &trans           &kp N0       &lt 3 TAB     &trans    &kp N6    &kp N7    &kp N8    &kp N9
        &trans  &trans  &mt RGUI F12  &lt 3 DEL     &trans           &trans          &trans     &trans    &trans    &trans    &trans    &trans
&mt LCTRL PLUS                           &trans     &trans           &trans          &kp N1                         &trans    &trans    &trans
     &kp UNDER  &kp F1        &kp F2     &kp F3     &kp F4           &kp F5          &kp F6     &kp F7    &kp F8    &kp F9   &kp F10   &kp F11
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&kp KP_MULTIPLY     &kp KP_N4  &kp KP_N5   &kp KP_N6  &kp KP_PLUS  &mt RCTRL K_APP        &trans  &kp C_MUTE      &kp LEFT     &kp UP  &kp RIGHT    &kp INS
      &kp KP_N1     &kp KP_N2  &kp KP_N3  &kp KP_DOT       &trans  &kp PAUSE_BREAK        &trans      &trans  &kp C_VOL_DN    &kp END   &kp DOWN  &kp PG_DN
         &trans     &lt 3 RET     &trans      &trans       &trans        &lt 3 ESC        &trans      &trans        &trans     &trans     &trans     &trans
&mt LCTRL EQUAL                               &trans       &trans           &trans     &kp KP_N0                               &trans     &trans     &trans
     &kp KP_NUM  &kp KP_SLASH  &kp KP_N7   &kp KP_N8    &kp KP_N9     &kp KP_MINUS  &kp C_VOL_UP    &kp HOME     &kp PSCRN  &kp PG_UP   &kp SLCK   &kp CAPS
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR   &none  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
       &none         &none         &none         &none         &none       &none  &trans        &reset         &none         &none         &none         &none
       &none        &trans        &reset        &trans         &none      &trans   &none         &none         &none         &none         &none         &none
  &bt BT_CLR                                     &none         &none       &none   &none                                     &none         &none         &none
 &bootloader         &none         &none         &none         &none       &none   &none         &none         &none         &none         &none   &bootloader
            >;
        };
    };
};
